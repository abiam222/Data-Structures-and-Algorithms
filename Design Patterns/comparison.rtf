Adapter
In software engineering, the adapter pattern is a software design pattern that allows the 
interface of an existing class to be used as another interface. It is often used to make 
existing classes work with others without modifying their source code

Builder
The builder pattern is a design pattern designed to provide a flexible solution to various 
object creation problems in object-oriented programming. The intent of the Builder design pattern 
is to separate the construction of a complex object from its representation. It is one of 
the Gang of Four design patterns


Decorator
in object-oriented programming, the decorator pattern is a design pattern that allows behavior 
to be added to an individual object, dynamically, without affecting the behavior of other objects 
from the same class.

Factory
In class-based programming, the factory method pattern is a creational pattern that uses 
factory methods to deal with the problem of creating objects without having to specify the 
exact class of the object that will be created.

Observer
The observer pattern is a software design pattern in which an object, called the subject,
 maintains a list of its dependents, called observers, and notifies them automatically of any 
 state changes, usually by calling one of their methods

Singleton
In software engineering, the singleton pattern is a software design pattern that 
restricts the instantiation of a class to one "single" instance. This is useful when exactly 
one object is needed to coordinate actions across the system. The term comes from the mathematical 
concept of a singleton