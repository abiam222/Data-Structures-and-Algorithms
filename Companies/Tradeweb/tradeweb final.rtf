{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fnil\fcharset0 Menlo-Regular;\f4\fswiss\fcharset0 Arial-BoldMT;\f5\fswiss\fcharset0 ArialMT;
\f6\fnil\fcharset0 HelveticaNeue-Italic;\f7\fnil\fcharset0 .SFNSText-Bold;\f8\fswiss\fcharset0 Helvetica;
\f9\fswiss\fcharset0 Helvetica-Bold;\f10\fnil\fcharset0 .SFNSText;\f11\fnil\fcharset0 TrebuchetMS-Bold;
\f12\fnil\fcharset0 TrebuchetMS;\f13\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue233;\red220\green161\blue13;\red26\green26\blue26;
\red255\green255\blue255;\red30\green30\blue31;\red44\green44\blue44;\red252\green79\blue8;\red0\green0\blue0;
\red82\green0\blue135;\red49\green49\blue49;\red0\green0\blue233;\red31\green31\blue31;\red239\green239\blue239;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c93333;\cssrgb\c89412\c68627\c3922;\cssrgb\c13333\c13333\c13333;
\cssrgb\c100000\c100000\c100000;\cssrgb\c15686\c15686\c16078;\cssrgb\c22745\c22745\c22745;\cssrgb\c100000\c40000\c0;\cssrgb\c0\c0\c0;
\cssrgb\c40000\c0\c60000;\cssrgb\c25098\c25098\c25098;\cssrgb\c0\c0\c93333;\cssrgb\c16078\c16078\c16078;\cssrgb\c94902\c94902\c94902;
}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\margl1440\margr1440\vieww12140\viewh13080\viewkind0
\deftab560
\pard\pardeftab560\partightenfactor0

\f0\b\fs34 \cf0 tradeweb\
\
\pard\pardeftab720\sl280\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.softwaretestinghelp.com/core-java-interview-questions/"}}{\fldrslt 
\f1\b0\fs24 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 https://www.softwaretestinghelp.com/core-java-interview-questions/}}
\f1\b0\fs24 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \
\pard\pardeftab720\sl280\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://www.edureka.co/blog/interview-questions/oops-interview-questions/"}}{\fldrslt \cf2 https://www.edureka.co/blog/interview-questions/oops-interview-questions/}}
\f0\b\fs34 \cf0 \kerning1\expnd0\expndtw0 \ulnone \
\pard\pardeftab560\slleading20\partightenfactor0

\f2\b0\fs24 \cf0 \
\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls1\ilvl0
\f3\fs20 \cf0 Design Patterns, what they are and how to implement them (DP interview qs)\
Singleton, Factory, Builder (tutorialspoint.com/design_pattern/index.htm\
\pard\pardeftab720\sl280\partightenfactor0
\ls1\ilvl0
\f2\fs24 \cf0 \
Javascript qs\
Typescript qs\
\
Java\
Multithreading\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 JPA\
Spring\
Java lambda\
Comparator / Comparable\
Method Reff\
\
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0
\cf0 Thread safe singleton implies {\field{\*\fldinst{HYPERLINK "https://www.glassdoor.com/Interview/Thread-safe-Singleton-implementation-QTN_2151283.htm"}}{\fldrslt \cf3 1 Answer}}\cf3 \
\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
LeetCode problems: 49, 53, 69, 151, 235, 258, 388, 448\
Group Anagrams - {\field{\*\fldinst{HYPERLINK "https://leetcode.com/problems/group-anagrams/"}}{\fldrslt 
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 https://leetcode.com/problems/group-anagrams/}}
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \

\f2 \cf0 \kerning1\expnd0\expndtw0 \ulnone Maximum Subarrays - {\field{\*\fldinst{HYPERLINK "https://leetcode.com/problems/maximum-subarray/"}}{\fldrslt 
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 https://leetcode.com/problems/maximum-subarray/}}
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \

\f2 \cf0 \kerning1\expnd0\expndtw0 \ulnone Sqrt - {\field{\*\fldinst{HYPERLINK "https://leetcode.com/problems/sqrtx/"}}{\fldrslt 
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 https://leetcode.com/problems/sqrtx/}}
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \

\f2 \cf0 \kerning1\expnd0\expndtw0 \ulnone Reverse word in string
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2  - {\field{\*\fldinst{HYPERLINK "https://leetcode.com/problems/reverse-words-in-a-string/"}}{\fldrslt https://leetcode.com/problems/reverse-words-in-a-string/}}\

\f2 \cf0 \kerning1\expnd0\expndtw0 \ulnone LCA BST -{\field{\*\fldinst{HYPERLINK "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/"}}{\fldrslt 
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/}}\
Add digits - {\field{\*\fldinst{HYPERLINK "https://leetcode.com/problems/add-digits/"}}{\fldrslt 
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 https://leetcode.com/problems/add-digits/}}
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \

\f2 \cf0 \kerning1\expnd0\expndtw0 \ulnone Longest Absolute File Path - {\field{\*\fldinst{HYPERLINK "https://leetcode.com/problems/longest-absolute-file-path/"}}{\fldrslt 
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 https://leetcode.com/problems/longest-absolute-file-path/}}
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \
\pard\pardeftab720\sl280\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/"}}{\fldrslt \cf2 https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/}}\cf2 \ulc2 \
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls2\ilvl0
\f2 \cf0 \kerning1\expnd0\expndtw0 \ulnone \
These Come from these 3 interfaces \
Set (3), List(3), Map(4)\
\
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls2\ilvl0
\f0\b \cf0 Set:
\f2\b0 \
TreeSet (SortedSet)\
LinkedHashSet\
HashSet - Does not allow duplicates (since its a set). Allows single null value\
(Also HashMap does not allow duplicate keys however it allows to have duplicate values.\
Permits single null key and any number of null values)\
\
\ls2\ilvl0
\f0\b List: (they all implement this interface)
\f2\b0 \
ArrayList - not synchronized, Created with Array, easy to insert, hard to find(read) , move, update, delete, 50% more memory when adding, dynamic, manipulation is slower than LL because uses array,\
LinkedList - not synchronized, Created doubly linked list, easy to insert anywhere, dynamic. Easy for adding and deleting elements but slow to access a specific element (O(n)))\
Vector - 2x more memory when adding . Synchronized, Thread safe\
\
\
\ls2\ilvl0
\f0\b Map:
\f2\b0 \
TreeMap (SortedMap) - Implemented with Red-Black tree\
HashMap - not synchronized, not thread-safe, can\'92t be shared between many threads without proper synchronization, allows one null key and multiple null values. Implemented with hash table\
LinkedHashMap - implemented as doubly-linked list buckets \
HashTable - is synchronized, doesn\'92t allow any null key or value\
\
\
\
List vs Set:\
\pard\pardeftab560\slleading20\partightenfactor0
\ls2\ilvl0
\f0\b \cf0 List 
\f2\b0 is a type of ordered collection that maintains the elements insertion order while 
\f0\b Set
\f2\b0  is a type of unordered collection so element are not maintained any order. 
\f0\b List 
\f2\b0  allows duplicates while 
\f0\b Set 
\f2\b0  doesn\'92t allow duplicate elements \
\pard\pardeftab560\pardirnatural\partightenfactor0
\ls2\ilvl0\cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0
\ls2\ilvl0\cf0 When to use a private constructor?\
Make a class static, or you don\'92t want people to instantiate a class (Singleton Pattern)\
\
\ls2\ilvl0
\f0\b What is a hashcode? What is the usage of it? Does the same hashcode mean equal?
\f2\b0 \
Hashcode is used to facilitate hashing in the hash tables, which are used by data structures like HashMap and HashTables. \
equals() checks if the two object compare in equality, checks reference\
hasCode returns int value for anObject \
If two objects are equals and equals(obj) is true, then hashCode must product same integer\
If two objects have the same dashcode then they are NOT necessarily equal. Otherwise you will\
Have discovered theperfect hash function.\
Opposite is true. If the objects are equal, then they must have the same hashcode\
\pard\pardeftab720\sl360\partightenfactor0
\ls2\ilvl0\cf0 \
Run vs the other Thread classes and etc\
\
\pard\pardeftab560\slleading20\partightenfactor0
\ls2\ilvl0\cf0 \
Implement Factory, Singleton, Builder\
\
\
\ls2\ilvl0
\f0\b Interface vs abstract class
\f2\b0 \
An abstract class permits you to make functionality that subclasses can implement\
Or override whereas an interface only permits you to state functionality but not to implement it.\
A class can extend only one abstract class while class can implement multiple interfaces \
\
\ls2\ilvl0
\f0\b Static Method possible in abstract class and interface?
\f2\b0 \
- Methods in abstract class are dynamically binder to their functionality. Declaring a method static \
Means we can call that method by its class name and if that class is abstract as well,\
It makes no sense to call it as it does not contain any body,  and hence we cannot declare a \
Method both as static and abstract.\
\pard\pardeftab720\sl360\partightenfactor0
\ls2\ilvl0\cf0 - Similar to Default Method in interface, the static method in an interface can be defined in the interface, \
But these methods cannot be overridden in implementation classes\'85. To use a static method, interface\
Name should be instantiated with it, as it is a part of the interface only \
\
\pard\pardeftab720\sl360\partightenfactor0
\ls2\ilvl0
\f0\b \cf0 ConcurrentModificationException
\f2\b0 \
In multithreaded environment, if during the detection of the resource, any method finds that there is a \
Concurrent modification of that object which is not permissible, then this ConcurrentModificationException\
Might be thrown\
\
1. If this exception is detected, then the results of the iteration are undefined\
2. Generally, some iterator implementations choose to throw this exception as soon as it encountered, \
  Called fail-fast iterators.\
\
e.g. If we are trying to modify any collection in the code using a thread, but some another thread is already\
Using that collection, then will not be allowed. \
\
\ls2\ilvl0
\f0\b Comparator vs Comparable\
\pard\pardeftab720\sl360\partightenfactor0

\f4 \cf4 \cb5 \expnd0\expndtw0\kerning0
Comparable
\f5\b0 \'a0interface is used to sort the objects with natural ordering.\'a0
\f4\b Comparator
\f5\b0 \'a0in Java is used to sort attributes of different objects.\'a0
\f4\b Comparable
\f5\b0 \'a0interface compares \'93this\'94 reference with the object specified.\'a0
\f4\b Comparator
\f5\b0 \'a0in Java compares two different class objects provided.\
You will sort other things in arrays (not objects) Arrays.sort(<array name>)\
\

\f4\b JDK then JRE then JVM+Lib Files\
\pard\pardeftab560\slleading20\partightenfactor0

\f0 \cf0 \cb1 \kerning1\expnd0\expndtw0 JDK vs JVM vs JRE?
\f2\b0 \
\
JVM is the Java Virtual Machine \'96 it actually runs Java ByteCode.\
\
JRE is the Java Runtime Environment \'96 it contains a JVM, among other things, and is what you need to run a Java program.\
\
JDK is the Java Development Kit \'96 it is the JRE, but with javac (which is what you need to compile Java source code) and other programming tools added.\
OpenJDK is a specific JDK implementation.\
\

\f0\b Concrete vs abstract class\

\f2\b0 An abstract class cannot be instantiated directly. The object of such class cannot be created\
Directly using the new keyword. Concrete class is a type of subclass, which implements all\
The abstract method and its super abstract class which it extends too.\
\
\pard\pardeftab720\sl360\sa300\partightenfactor0
\cf6 \cb5 \expnd0\expndtw0\kerning0
The only real difference is that a concrete class can be instantiated because it provides (or inherits) the implementation for all of its methods. An abstract class cannot be instantiated because at least one method has not been implemented.\
Abstract classes are meant to be extended. If they provide any implementation detail, it can be reused by all child classes. A special case is the\'a0
\f6\i pure abstract class
\f2\i0 , which provides no implementation at all. These classes do not help with code reuse, which makes them fundamentally different. This difference is described by the two types of inheritance:\
\

\f7\b Thread\
\pard\pardeftab720\sl340\partightenfactor0

\f8\b0 \cf7 In Java, the flow of execution is called Thread. Every java program has at least one thread called the main thread, the main thread is created by JVM. The user can define their own threads by extending the Thread class (or) by implementing the Runnable interface. Threads are executed concurrently.\
\
Extend Thread class or Implement Runnable (call run())\
start() - start thread\
join() - join one thread with the end of the currently running thread \

\f2 \cf6 yield() - 
\f8 \cf7 A yield () method moves the currently running thread to a\'a0 runnable state and allows the other threads for execution. So that equal priority threads have a chance to run. It is a static method. It doesn\'92t release any lock.\
wait() - makes a thread wait in the waiting pool \
\
\pard\pardeftab720\sl340\sa420\partightenfactor0

\f9\b \cf8 Q #46) Difference between start() and run() method of thread class.
\f8\b0 \cf7  
\f9\b Answer:
\f8\b0 \'a0Start() method creates a new thread and the code inside the run () method is executed in the new thread. If we directly called the run() method then a new thread is not created and the currently executing thread will continue to execute the run() method.
\fs30 \

\f9\b\fs24 \cf8 Q #47) What is Multi-threading?
\f8\b0 \cf7  
\f9\b Answer:
\f8\b0 \'a0Multiple threads are executed simultaneously. Each thread starts its own stack based on the flow (or) priority of the threads.
\fs30 \

\f9\b\fs24 \cf8 Q #48) Explain the thread life cycle in Java.
\f8\b0 \cf7  
\f9\b Answer:
\f8\b0 \'a0
\f9\b Thread has the following states:
\f8\b0 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl340\partightenfactor0
\ls3\ilvl0\cf7 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
New\cb1 \
\ls3\ilvl0\cb5 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Runnable\cb1 \
\ls3\ilvl0\cb5 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Running\cb1 \
\ls3\ilvl0\cb5 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Non-runnable (Blocked)\cb1 \
\ls3\ilvl0\cb5 \kerning1\expnd0\expndtw0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
Terminated\cb1 \
\pard\pardeftab720\sl340\partightenfactor0

\f2 \cf6 \cb5 \
\pard\pardeftab720\sl340\partightenfactor0

\f10 \cf6 Synchornization - makes only one thread to access a block of code at a time. 
\f2 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \cb1 \kerning1\expnd0\expndtw0 Disadvantage (using in all methods) is performance \
\
\

\f0\b Other problems: 
\f2\b0 \
\
\pard\pardeftab560\pardirnatural\partightenfactor0

\f0\b \cf0 Talk about how you would write an algorithm to solve a Sudoku puzzle. Talk about how you might speed it up using concurrency.
\f2\b0 \
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
\

\f0\b Exception\
\pard\pardeftab720\sl340\sa420\partightenfactor0

\f9 \cf7 \cb5 \expnd0\expndtw0\kerning0
\'a0finally:
\f8\b0 This is followed either by try block (or) catch block. This block gets executed regardless of an exception. So generally clean up codes are provided here.\

\f9\b Collections
\fs30 \

\f8\b0\fs24 Group of objects\
\pard\pardeftab720\sl360\partightenfactor0

\f4\b \cf4 Autowiring
\f5\b0 \'a0feature of\'a0
\f4\b spring
\f5\b0 \'a0framework enables you to inject the object dependency implicitly. It internally uses setter or constructor injection.\'a0
\f4\b Autowiring
\f5\b0 \'a0can't be used to inject primitive and string values.\
\

\f4\b Java garbage collection
\f5\b0 \'a0is the process by which\'a0
\f4\b Java
\f5\b0 \'a0programs perform automatic memory management.\'a0
\f4\b Java
\f5\b0 \'a0programs compile to bytecode that can be run on a\'a0
\f4\b Java
\f5\b0 \'a0Virtual Machine, or JVM for short. ... The\'a0
\f4\b garbage collector
\f5\b0 \'a0finds these unused objects and deletes them to free up memory.
\fs32 \

\fs24 \
\pard\pardeftab720\sl280\sa234\partightenfactor0

\f4\b\fs23\fsmilli11700 \cf9 \cb1 Question 6 \'96 When does an Object becomes eligible for Garbage collection in Java?
\f11 \
\pard\pardeftab720\sl220\partightenfactor0

\f5\b0\fs20 \cf9 Answer : An object becomes\'a0{\field{\*\fldinst{HYPERLINK "http://javarevisited.blogspot.sg/2011/04/garbage-collection-in-java.html"}}{\fldrslt \cf10 \ul \ulc10 eligible for\'a0garbage\'a0collection}}\'a0when there is no live reference for that object or it can not be reached by any live thread.
\f12 \
\
\pard\pardeftab720\sl220\partightenfactor0

\f2\fs24 \cf0 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\sl220\partightenfactor0

\f0\b \cf0 Write a function that converts a column indicated by a String\
\pard\pardeftab560\pardirnatural\partightenfactor0

\f2\b0 \cf0 (e.g A, B, ..., Z, AA, AB, ...) into a number (1, 2, ..., 26, 27, 28, ...)\
\
\
Given a list of strings, process the list so that if any individual string starts with "A" it is replaced with a string that instead starts with "K". \'a0{\field{\*\fldinst{HYPERLINK "https://www.glassdoor.com/Interview/Given-a-list-of-strings-process-the-list-so-that-if-any-individual-string-starts-with-A-it-is-replaced-with-a-string-tha-QTN_2151288.htm"}}{\fldrslt \cf3 1 Answer}}\cf3 \
\
\pard\pardeftab720\sl340\partightenfactor0

\f8 \cf11 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec11 Use a ListIterator so when you're doing replaces you have immediate access to the most recently iterated element (saves you from re-calling get() and set()).\
\
\
How did I improve site by 70%?\
\pard\pardeftab560\slleading20\partightenfactor0

\f2 \cf0 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 15-4.5=10.5seconds we improved by\
10.5/15 = 0.7%\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b \cf0 Thread safe Singleton Implementation\
\pard\pardeftab720\sl280\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://medium.com/@cancerian0684/singleton-design-pattern-and-how-to-make-it-thread-safe-b207c0e7e368"}}{\fldrslt 
\f1\b0 \cf12 \expnd0\expndtw0\kerning0
\ul \ulc12 \outl0\strokewidth0 \strokec12 https://medium.com/@cancerian0684/singleton-design-pattern-and-how-to-make-it-thread-safe-b207c0e7e368}}
\f2\b0 \
\pard\pardeftab720\sl360\partightenfactor0

\f3 \cf13 \cb14 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 // Correct but possibly expensive multithreaded version\cb1 \

\f13\b \cb14 class
\f3\b0  
\f13\b Foo
\f3\b0  \{\cb1 \
\cb14     
\f13\b private
\f3\b0  Helper helper;\cb1 \
\cb14     
\f13\b public
\f3\b0  
\f13\b synchronized
\f3\b0  Helper getHelper() \{\cb1 \
\cb14         
\f13\b if
\f3\b0  (helper == null) \{\cb1 \
\cb14             helper = 
\f13\b new
\f3\b0  Helper();\cb1 \
\cb14         \}\cb1 \
\cb14         
\f13\b return
\f3\b0  helper;\cb1 \
\cb14     \}\cb1 \
\cb14     // other functions and members...\cb1 \
\cb14 \}
\fs32 \cb1 \
\pard\pardeftab560\slleading20\partightenfactor0

\f2\fs24 \cf3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
Best \cf9 way is using locking\
\
\pard\pardeftab720\sl380\partightenfactor0

\f13\b \cf13 \cb14 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec13 class
\f3\b0  
\f13\b Foo
\f3\b0  \{\
    
\f13\b private
\f3\b0  
\f13\b volatile
\f3\b0  Helper helper;\
\
    
\f13\b public
\f3\b0  Helper getHelper() \{\
        Helper localRef = helper;\
        
\f13\b if
\f3\b0  (localRef == null) \{\
            
\f13\b synchronized
\f3\b0  (this) \{\
                localRef = helper;\
                
\f13\b if
\f3\b0  (localRef == null) \{\
                    helper = localRef = 
\f13\b new
\f3\b0  Helper();\
                \}\
            \}\
        \}\
        
\f13\b return
\f3\b0  localRef;\
    \}\
    // other functions and members...\
\}
\f2 \cf3 \cb1 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 \
\pard\pardeftab560\pardirnatural\partightenfactor0
\cf3 \
\
\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 Array list is array backed vs head/tail nodes. This is the question where they told me to look up what the JDK does. I of course picked the LinkedList since the question explicitly said in the middle and how inserting into an array causes elements to be mass copied. They told me ArrayList actually did better though. I then proceeded to talk about how I was aware of the System.arrayCopy() that ArrayList used for insert but was personally unaware of whether or not that provided enough performance to beat the theoretical difference with a LinkedList. They didn't care/care to admit that I actually did know what I was talking about.\
ArrayList: dynamically re-sizing array. Pros: iterator. Cons: Element search\
LinkedList: double linked list. Pros: read access. Cons: add/remove involves shifting\
\
\
Singleton vs other Design Patterns. Factory, Observer, Builder\
\
\
Implement Linked List, HashMap, Stacks & Queues, Trees, Dfs/BFS\
\pard\pardeftab560\pardirnatural\partightenfactor0
\cf3 \
\
}